# This is a basic workflow to help you get started with Actions

name: Push

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{github.repository}}-initializer
  VERSION: 1.0.

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{github.run_number}}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{runner.os}}-buildx-${{github.sha}}
          restore-keys: |
            ${{runner.os}}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: initializer
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: initializer
          push: true
          tags: ${{env.IMAGE_NAME}}:${{env.VERSION}}${{env.BUILD_NUMBER}},${{env.IMAGE_NAME}}:${{env.VERSION}} , ${{env.IMAGE_NAME}}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - run: helm template -n efk efk . --set-string initializer.image=${{env.IMAGE_NAME}},initializer.imageVersion=${{env.VERSION}}${{env.BUILD_NUMBER}} > ./efk-manifests.yaml

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{env.VERSION}}${{env.BUILD_NUMBER}}
          release_name: Build ${{env.VERSION}}${{env.BUILD_NUMBER}}
          draft: false
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./efk-manifests.yaml
          asset_name: efk-manifests-${{env.VERSION}}${{env.BUILD_NUMBER}}.yaml
          asset_content_type: text/yaml
